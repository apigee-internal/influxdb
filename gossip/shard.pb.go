// Code generated by protoc-gen-go.
// source: shard.proto
// DO NOT EDIT!

/*
Package gossip is a generated protocol buffer package.

It is generated from these files:
	shard.proto

It has these top-level messages:
	CreateShardCommmand
	WriteShardCommand
	ReadShardCommand
*/
package gossip

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateShardCommmand struct {
	Database         *string `protobuf:"bytes,1,req,name=database" json:"database,omitempty"`
	RetentionPolicy  *string `protobuf:"bytes,2,req,name=retentionPolicy" json:"retentionPolicy,omitempty"`
	ShardID          *uint64 `protobuf:"varint,3,req,name=shardID" json:"shardID,omitempty"`
	Enabled          *bool   `protobuf:"varint,4,req,name=enabled" json:"enabled,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CreateShardCommmand) Reset()                    { *m = CreateShardCommmand{} }
func (m *CreateShardCommmand) String() string            { return proto.CompactTextString(m) }
func (*CreateShardCommmand) ProtoMessage()               {}
func (*CreateShardCommmand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateShardCommmand) GetDatabase() string {
	if m != nil && m.Database != nil {
		return *m.Database
	}
	return ""
}

func (m *CreateShardCommmand) GetRetentionPolicy() string {
	if m != nil && m.RetentionPolicy != nil {
		return *m.RetentionPolicy
	}
	return ""
}

func (m *CreateShardCommmand) GetShardID() uint64 {
	if m != nil && m.ShardID != nil {
		return *m.ShardID
	}
	return 0
}

func (m *CreateShardCommmand) GetEnabled() bool {
	if m != nil && m.Enabled != nil {
		return *m.Enabled
	}
	return false
}

type WriteShardCommand struct {
	ShardID          *uint64  `protobuf:"varint,1,req,name=shardID" json:"shardID,omitempty"`
	Points           [][]byte `protobuf:"bytes,2,rep,name=points" json:"points,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *WriteShardCommand) Reset()                    { *m = WriteShardCommand{} }
func (m *WriteShardCommand) String() string            { return proto.CompactTextString(m) }
func (*WriteShardCommand) ProtoMessage()               {}
func (*WriteShardCommand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *WriteShardCommand) GetShardID() uint64 {
	if m != nil && m.ShardID != nil {
		return *m.ShardID
	}
	return 0
}

func (m *WriteShardCommand) GetPoints() [][]byte {
	if m != nil {
		return m.Points
	}
	return nil
}

type ReadShardCommand struct {
	ShardIDs         []uint64                  `protobuf:"varint,1,rep,name=shardIDs" json:"shardIDs,omitempty"`
	StartTime        *int64                    `protobuf:"varint,2,req,name=startTime" json:"startTime,omitempty"`
	Shards           []*ReadShardCommand_Shard `protobuf:"bytes,3,rep,name=shards" json:"shards,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *ReadShardCommand) Reset()                    { *m = ReadShardCommand{} }
func (m *ReadShardCommand) String() string            { return proto.CompactTextString(m) }
func (*ReadShardCommand) ProtoMessage()               {}
func (*ReadShardCommand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadShardCommand) GetShardIDs() []uint64 {
	if m != nil {
		return m.ShardIDs
	}
	return nil
}

func (m *ReadShardCommand) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *ReadShardCommand) GetShards() []*ReadShardCommand_Shard {
	if m != nil {
		return m.Shards
	}
	return nil
}

type ReadShardCommand_Shard struct {
	Points           [][]byte `protobuf:"bytes,1,rep,name=points" json:"points,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ReadShardCommand_Shard) Reset()                    { *m = ReadShardCommand_Shard{} }
func (m *ReadShardCommand_Shard) String() string            { return proto.CompactTextString(m) }
func (*ReadShardCommand_Shard) ProtoMessage()               {}
func (*ReadShardCommand_Shard) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *ReadShardCommand_Shard) GetPoints() [][]byte {
	if m != nil {
		return m.Points
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateShardCommmand)(nil), "gossip.CreateShardCommmand")
	proto.RegisterType((*WriteShardCommand)(nil), "gossip.WriteShardCommand")
	proto.RegisterType((*ReadShardCommand)(nil), "gossip.ReadShardCommand")
	proto.RegisterType((*ReadShardCommand_Shard)(nil), "gossip.ReadShardCommand.Shard")
}

func init() { proto.RegisterFile("shard.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x8f, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x95, 0xba, 0x84, 0xf6, 0x5a, 0xd1, 0x36, 0x0c, 0x8d, 0x18, 0x10, 0xca, 0x94, 0xc9,
	0x03, 0xe2, 0x0d, 0xca, 0xc2, 0x86, 0x00, 0x89, 0xf9, 0x82, 0x4f, 0x60, 0x29, 0xb6, 0x23, 0xdf,
	0x2d, 0x6c, 0x3c, 0x3a, 0xb6, 0x61, 0x08, 0x6c, 0xf6, 0x7f, 0xfe, 0xfe, 0xfb, 0x0c, 0x1b, 0xfe,
	0xc0, 0x68, 0xf4, 0x14, 0x83, 0x84, 0xa6, 0x7e, 0x0f, 0xcc, 0x76, 0xea, 0x06, 0xb8, 0x3c, 0x45,
	0x42, 0xa1, 0xe7, 0x3c, 0x3c, 0x05, 0xe7, 0x1c, 0x7a, 0xd3, 0xec, 0x61, 0x65, 0x50, 0x70, 0x40,
	0xa6, 0xb6, 0xba, 0x59, 0xf4, 0xeb, 0xe6, 0x08, 0xbb, 0x48, 0x42, 0x5e, 0x6c, 0xf0, 0x8f, 0x61,
	0xb4, 0x6f, 0x9f, 0xed, 0xa2, 0x0c, 0x76, 0x70, 0x5e, 0x8a, 0x1f, 0xee, 0x5b, 0x95, 0x82, 0x65,
	0x0e, 0xc8, 0xe3, 0x30, 0x92, 0x69, 0x97, 0x29, 0x58, 0x75, 0x77, 0x70, 0x78, 0x8d, 0x76, 0xb6,
	0x22, 0x6f, 0x98, 0x61, 0x55, 0xc1, 0x2e, 0xa0, 0x9e, 0x82, 0xf5, 0xc2, 0xa9, 0x57, 0xf5, 0xdb,
	0xee, 0xab, 0x82, 0xfd, 0x13, 0xa1, 0xf9, 0x43, 0x25, 0xaf, 0x5f, 0x8a, 0x13, 0xa6, 0x12, 0x76,
	0x80, 0x35, 0x0b, 0x46, 0x79, 0xb1, 0x8e, 0x8a, 0x91, 0x6a, 0x34, 0xd4, 0xe5, 0x11, 0x27, 0x21,
	0xd5, 0x6f, 0x6e, 0xaf, 0xf5, 0xcf, 0x67, 0xf5, 0xff, 0x3a, 0x5d, 0x2e, 0x57, 0x47, 0x38, 0x2b,
	0x87, 0x99, 0x42, 0xee, 0xde, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x32, 0xbb, 0x9f, 0x0e, 0x32,
	0x01, 0x00, 0x00,
}
